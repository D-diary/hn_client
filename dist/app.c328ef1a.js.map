{"version":3,"sources":["app.js"],"names":["container","document","getElementById","ajax","XMLHttpRequest","content","createElement","NEWS_URL","CONTENT_URL","getData","url","open","send","JSON","parse","response","newsFeed","newsList","push","i","id","title","comments_count","innerHTML","join","newsDetail","location","hash","substr","newsContent","replace","router","routePath","window","addEventListener"],"mappings":"AAAA;AACA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB,EACA;AACA;;AACA,IAAMC,IAAI,GAAG,IAAIC,cAAJ,EAAb,EACA;;AACA,IAAMC,OAAO,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAhB,EACA;;AACA,IAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAMC,WAAW,GAAG,wCAApB,EAEA;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpBP,EAAAA,IAAI,CAACQ,IAAL,CAAU,KAAV,EAAiBD,GAAjB,EAAsB,KAAtB;AACAP,EAAAA,IAAI,CAACS,IAAL;AAEA,SAAOC,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACY,QAAhB,CAAP;AACD;;AAED,SAASC,QAAT,GAAoB;AAClB,MAAMA,QAAQ,GAAGP,OAAO,CAACF,QAAD,CAAxB;AACA,MAAMU,QAAQ,GAAG,EAAjB;AAEAA,EAAAA,QAAQ,CAACC,IAAT,CAAc,MAAd;;AAGA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BF,IAAAA,QAAQ,CAACC,IAAT,4CAEgBF,QAAQ,CAACG,CAAD,CAAR,CAAYC,EAF5B,4BAGQJ,QAAQ,CAACG,CAAD,CAAR,CAAYE,KAHpB,eAG8BL,QAAQ,CAACG,CAAD,CAAR,CAAYG,cAH1C;AAOD,GAfiB,CAgBlB;;;AACAL,EAAAA,QAAQ,CAACC,IAAT,CAAc,OAAd,EAjBkB,CAkBlB;AACA;;AACAlB,EAAAA,SAAS,CAACuB,SAAV,GAAsBN,QAAQ,CAACO,IAAT,CAAc,EAAd,CAAtB;AACD,EAED;;;AAEA,SAASC,UAAT,GAAsB;AACpB,MAAML,EAAE,GAAGM,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqB,CAArB,CAAX;AAEA,MAAMC,WAAW,GAAGpB,OAAO,CAACD,WAAW,CAACsB,OAAZ,CAAoB,KAApB,EAA2BV,EAA3B,CAAD,CAA3B;AACA,MAAMC,KAAK,GAAGpB,QAAQ,CAACK,aAAT,CAAuB,IAAvB,CAAd;AAEAN,EAAAA,SAAS,CAACuB,SAAV,qBACMM,WAAW,CAACR,KADlB;AAOD;;AAED,SAASU,MAAT,GAAkB;AAChB,MAAMC,SAAS,GAAGN,QAAQ,CAACC,IAA3B;;AAEA,MAAIK,SAAS,KAAK,EAAlB,EAAsB;AACpBhB,IAAAA,QAAQ;AACT,GAFD,MAEO;AACLS,IAAAA,UAAU;AACX;AACF;;AAEDQ,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsCH,MAAtC;AAEAA,MAAM","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["// html 루트 반복을 줄이기 위해 상수화\r\nconst container = document.getElementById('root');\r\n// XMLHttpRequest가 반환하는 결과값을 ajax에 저장\r\n// XMLHttpRequset 객체는 서버로부터 XML 데이터를 전송받아 처리하는데 사용됨\r\nconst ajax = new XMLHttpRequest();\r\n// div만듬\r\nconst content = document.createElement('div');\r\n// 해커뉴스 api\r\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';\r\n\r\n//ajax 중복되는 부분을 함수화함\r\nfunction getData(url) {\r\n  ajax.open('GET', url, false);\r\n  ajax.send();\r\n\r\n  return JSON.parse(ajax.response);\r\n}\r\n\r\nfunction newsFeed() {\r\n  const newsFeed = getData(NEWS_URL);\r\n  const newsList = [];\r\n\r\n  newsList.push('<ul>');\r\n  \r\n  \r\n  for(let i = 0; i < 10; i++) {\r\n    newsList.push(`\r\n      <li>\r\n        <a href=\"#${newsFeed[i].id}\">\r\n          ${newsFeed[i].title} (${newsFeed[i].comments_count})\r\n        </a>\r\n      </li>\r\n    `);\r\n  }\r\n  //ul 닫기\r\n  newsList.push('</ul>');\r\n  // 하나로 합침 배열요소안에 있는 문자열들을 하나의 문자열로 합쳐서 반환\r\n  // 콤마라고 하는 문자열로 구분자를 넣어줌 \r\n  container.innerHTML = newsList.join('');\r\n}\r\n\r\n// ajax의 응답을 번역해서 newFeed에 넣음\r\n\r\nfunction newsDetail() {\r\n  const id = location.hash.substr(1);\r\n\r\n  const newsContent = getData(CONTENT_URL.replace('@id', id))\r\n  const title = document.createElement('h1');\r\n\r\n  container.innerHTML = `\r\n  <h1>${newsContent.title}</h1>\r\n\r\n  <div>\r\n    <a href=\"#\">목록으로</a>\r\n  </div>\r\n  `\r\n}\r\n\r\nfunction router() {\r\n  const routePath = location.hash;\r\n\r\n  if (routePath === '') {\r\n    newsFeed();\r\n  } else {\r\n    newsDetail();\r\n  }\r\n}\r\n\r\nwindow.addEventListener('hashchange', router);\r\n\r\nrouter();\r\n"]}